{"ast":null,"code":"import { POST_PRODUCT_REQUEST, POST_PRODUCT_SUCCESS, POST_PRODUCT_FAILURE } from './action';\nconst initalState = {\n  status: \"\",\n  prodID: 0,\n  prodName: \"\",\n  description: \"\",\n  price: 0,\n  figURL: \"\",\n  date: \"\",\n  calory: 0,\n  protein: 0,\n  lipid: 0,\n  carbonhydrates: 0,\n  sugar: 0,\n  fiber: 0,\n  scequiv: 0,\n  region: [],\n  allergy: [],\n  lastUpdated: Date.now(),\n  productShowFlag: false,\n  loadingFlag: true\n};\n\nconst postProductReducer = (state = initalState, action) => {\n  switch (action.type) {\n    case POST_PRODUCT_REQUEST:\n      return {\n        status: \"Fetching\",\n        prodID: 0,\n        prodName: \"\",\n        description: \"\",\n        price: 0,\n        figURL: \"\",\n        date: \"\",\n        calory: 0,\n        protein: 0,\n        lipid: 0,\n        carbonhydrates: 0,\n        sugar: 0,\n        fiber: 0,\n        scequiv: 0,\n        region: [],\n        allergy: [],\n        lastUpdated: Date.now(),\n        productShowFlag: false,\n        loadingFlag: true\n      };\n\n    case POST_PRODUCT_SUCCESS:\n      return {\n        status: \"Success\",\n        prodID: action.payload.prodID,\n        prodName: action.payload.prodName,\n        description: action.payload.description,\n        price: action.payload.price,\n        figURL: action.payload.figURL,\n        date: action.payload.date,\n        calory: action.payload.calory,\n        protein: action.payload.protein,\n        lipid: action.payload.lipid,\n        carbonhydrates: action.payload.carbonhydrates,\n        sugar: action.payload.suger,\n        fiber: action.payload.fiber,\n        scequiv: action.payload.scequiv,\n        region: action.payload.region,\n        allergy: action.payload.allergy,\n        lastUpdated: Date.now(),\n        productShowFlag: true,\n        loadingFlag: false\n      };\n\n    case POST_PRODUCT_FAILURE:\n      return {\n        status: \"Failure\",\n        prodID: 0,\n        prodName: \"\",\n        description: \"\",\n        price: 0,\n        figURL: \"\",\n        date: \"\",\n        calory: 0,\n        protein: 0,\n        lipid: 0,\n        carbonhydrates: 0,\n        sugar: 0,\n        fiber: 0,\n        scequiv: 0,\n        region: [],\n        allergy: [],\n        lastUpdated: Date.now(),\n        productShowFlag: false,\n        loadingFlag: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default postProductReducer;","map":{"version":3,"sources":["/Users/yuya/Workspace/React/test-app/src/components/postProductReducer.ts"],"names":["POST_PRODUCT_REQUEST","POST_PRODUCT_SUCCESS","POST_PRODUCT_FAILURE","initalState","status","prodID","prodName","description","price","figURL","date","calory","protein","lipid","carbonhydrates","sugar","fiber","scequiv","region","allergy","lastUpdated","Date","now","productShowFlag","loadingFlag","postProductReducer","state","action","type","payload","suger"],"mappings":"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","sourcesContent":["import { ProductState } from './store';\nimport { Action, POST_PRODUCT_REQUEST, POST_PRODUCT_SUCCESS, POST_PRODUCT_FAILURE } from './action';\n\nconst initalState: ProductState = {\n  status: \"\",\n  prodID: 0,\n  prodName: \"\",\n  description: \"\",\n  price: 0,\n  figURL: \"\",\n  date: \"\",\n  calory: 0,\n  protein: 0,\n  lipid: 0,\n  carbonhydrates: 0,\n  sugar: 0,\n  fiber: 0,\n  scequiv: 0,\n  region: [],\n  allergy: [],\n  lastUpdated: Date.now(),\n  productShowFlag: false,\n  loadingFlag: true\n\n}\n\nconst postProductReducer = (state: ProductState = initalState, action: Action): ProductState => {\n  switch (action.type) {\n    case POST_PRODUCT_REQUEST:\n      return ({\n        status: \"Fetching\",\n        prodID: 0,\n        prodName: \"\",\n        description: \"\",\n        price: 0,\n        figURL: \"\",\n        date: \"\",\n        calory: 0,\n        protein: 0,\n        lipid: 0,\n        carbonhydrates: 0,\n        sugar: 0,\n        fiber: 0,\n        scequiv: 0,\n        region: [],\n        allergy: [],\n        lastUpdated: Date.now(),\n        productShowFlag: false,\n        loadingFlag: true,\n      })\n    case POST_PRODUCT_SUCCESS:\n      return ({\n        status: \"Success\",\n        prodID: action.payload.prodID,\n        prodName: action.payload.prodName,\n        description: action.payload.description,\n        price: action.payload.price,\n        figURL: action.payload.figURL,\n        date: action.payload.date,\n        calory: action.payload.calory,\n        protein: action.payload.protein,\n        lipid: action.payload.lipid,\n        carbonhydrates: action.payload.carbonhydrates,\n        sugar: action.payload.suger,\n        fiber: action.payload.fiber,\n        scequiv: action.payload.scequiv,\n        region: action.payload.region,\n        allergy: action.payload.allergy,\n        lastUpdated: Date.now(),\n        productShowFlag: true,\n        loadingFlag: false\n      })\n    case POST_PRODUCT_FAILURE:\n      return ({\n        status: \"Failure\",\n        prodID: 0,\n        prodName: \"\",\n        description: \"\",\n        price: 0,\n        figURL: \"\",\n        date: \"\",\n        calory: 0,\n        protein: 0,\n        lipid: 0,\n        carbonhydrates: 0,\n        sugar: 0,\n        fiber: 0,\n        scequiv: 0,\n        region: [],\n        allergy: [],\n        lastUpdated: Date.now(),\n        productShowFlag: false,\n        loadingFlag: true\n      })\n    default:\n      return state\n  }\n}\n\nexport default postProductReducer;\n"]},"metadata":{},"sourceType":"module"}