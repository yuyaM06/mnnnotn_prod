{"ast":null,"code":"// import personalInfo from './personal_worktime_info_DeputyChief.json';\n// import personalInfo from './personal_worktime_info_SeniorProfession.json';\nexport function getSymptom(personalInfo) {\n  // 曜日day（0:Mon, 1:Tue, 2:Wed, 3:Thu, 4:Fri）\n  const day = 4;\n  let thedaybeforeyesterday = day - 1;\n\n  if (thedaybeforeyesterday < 0) {\n    thedaybeforeyesterday = 4;\n  }\n\n  const symptom = [\"睡眠不足\", \"運動不足\", \"慢性的疲労\", \"眼精疲労\", \"集中力低下・頭痛\", \"腰痛・肩こり\", \"免疫低下\", \"過度なストレス状態\", \"該当なし\"];\n  const severity = [0, 0, 0, 0, 0, 0, 0, 0]; //パーソナル情報と症状の関連度\n\n  const matrix = [[1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 1, 1, 1, 0, 0, 0.5], [0, 1, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 0, 0], [1, 0, 1, 0, 1, 0, 0, 0.5], [0, 1, 0, 0, 0.5, 0, 0, 0], [1, 0, 1, 1, 1, 1, 1, 1], [0, 1, 0, 0, 0, 1, 1, 0]]; // returnする\n\n  let workStyleResult = {\n    flagArray: {\n      earlyFlag: false,\n      // 朝早い\n      lateFlag: false,\n      // 終わるの遅い\n      longMeetingFlag: false,\n      // MTG多い\n      longDevFlag: false,\n      // dev多い\n      irregularWorkingFlag: false,\n      // 不規則\n      teleworkFlag: false,\n      // テレワーク\n      overtimeFlag: false,\n      // 長時間労働（残業しすぎ）\n      lackOfExerciseFlag: false // 運動不足\n\n    },\n    isNiceWorkStyle: false,\n    // 健康かどうか\n    symptoms: [\"該当なし\"],\n    worstSymptom: \"該当なし\"\n  }; //前日の出勤時刻を取得\n\n  let startyesterdaystr = personalInfo.personalinfo[day].startTime;\n  let startyesterday = new Date(startyesterdaystr);\n  let starthour_yesterday = startyesterday.getHours(); //前々日tdby（the day before yesterday）の出勤時刻を取得\n\n  let starttdbystr = personalInfo.personalinfo[thedaybeforeyesterday].startTime;\n  let starttdby = new Date(starttdbystr);\n  let starthour_tdby = starttdby.getHours(); // 前日の退勤時刻を取得\n\n  let endyesterdaystr = personalInfo.personalinfo[day].endTime;\n  let endyesterday = new Date(endyesterdaystr);\n  let endhour_yesterday = endyesterday.getHours(); // 前々日の退勤時刻を取得\n\n  let endtdbystr = personalInfo.personalinfo[thedaybeforeyesterday].endTime;\n  let endtdby = new Date(endtdbystr);\n  let endhour_tdby = endtdby.getHours(); // 出勤時刻が8時以前\n\n  if (starthour_yesterday < 8) {\n    for (let i = 0; i < 8; i++) {\n      severity[i] += matrix[0][i];\n    }\n\n    workStyleResult.flagArray.earlyFlag = true;\n  } // 退勤時刻が21時以降\n\n\n  if (endhour_yesterday >= 21 || endhour_yesterday < 5) {\n    for (let i = 0; i < 8; i++) {\n      severity[i] += matrix[1][i];\n    }\n\n    workStyleResult.flagArray.lateFlag = true;\n  } // 会議参加時間が1日4時間以上\n\n\n  if (personalInfo.personalinfo[day].meetingHours >= 4) {\n    for (let i = 0; i < 8; i++) {\n      severity[i] += matrix[2][i];\n    }\n\n    workStyleResult.flagArray.longMeetingFlag = true;\n  } // 開発時間が1日4時間以上\n\n\n  if (personalInfo.personalinfo[day].devHours >= 4) {\n    for (let i = 0; i < 8; i++) {\n      severity[i] += matrix[3][i];\n    }\n\n    workStyleResult.flagArray.longDevFlag = true;\n  } //出勤時刻の差あるいは退勤時刻の差が2時間以上\n\n\n  if (Math.abs(starthour_yesterday - starthour_tdby) >= 2 || Math.abs(endhour_yesterday - endhour_tdby) >= 2) {\n    for (let i = 0; i < 8; i++) {\n      severity[i] += matrix[4][i];\n    }\n\n    workStyleResult.flagArray.irregularWorkingFlag = true;\n  } // 在宅勤務が週3日以上\n\n\n  if (personalInfo.personalinfo[day].teleworkDaysCount >= 3) {\n    for (let i = 0; i < 8; i++) {\n      severity[i] += matrix[5][i];\n    }\n\n    workStyleResult.flagArray.teleworkFlag = true;\n  } // 業務時間が週50時間以上\n\n\n  if (personalInfo.personalinfo[0].dailyWorkHours + personalInfo.personalinfo[1].dailyWorkHours + personalInfo.personalinfo[2].dailyWorkHours + personalInfo.personalinfo[3].dailyWorkHours + personalInfo.personalinfo[4].dailyWorkHours >= 50) {\n    for (let i = 0; i < 8; i++) {\n      severity[i] += matrix[6][i];\n    }\n\n    workStyleResult.flagArray.overtimeFlag = true;\n  } // 運動時間が1日に0.5時間以下、あるいは歩数が1日に3000歩以下\n\n\n  if (personalInfo.personalinfo[day].exerciseHours <= 0.5 || personalInfo.personalinfo[day].steps < 3000) {\n    for (let i = 0; i < 8; i++) {\n      severity[i] += matrix[7][i];\n    }\n\n    workStyleResult.flagArray.lackOfExerciseFlag = true;\n  }\n\n  console.log(\"症状別重度: \" + severity); //severity[i]の総和を計算\n\n  let total_severity = severity.reduce(function (sum, element) {\n    return sum + element;\n  }, 0);\n  console.log(\"症状重度合計: \" + total_severity); // 1つ以上の症状に該当する場合の処理\n\n  if (total_severity > 0) {\n    //severity[i]を降順にランキング付け\n    let sorted = severity.slice().sort(function (a, b) {\n      return b - a;\n    });\n    var ranks = severity.slice().map(function (x) {\n      return sorted.indexOf(x) + 1;\n    }); // console.log(ranks);\n    //severity[i]が最大値のときのインデックスiを取得\n\n    let max = Math.max(...severity);\n    var index_array = new Array();\n    var index = severity.indexOf(max);\n\n    while (index !== -1) {\n      index_array.push(index);\n      index = severity.indexOf(max, index + 1);\n    } // console.log(index_array);\n    // severity[i]が1位(タイ)のsymptomを格納\n\n\n    workStyleResult.symptoms.shift();\n\n    for (let i = 0; i < index_array.length; i++) {\n      workStyleResult.symptoms.push(symptom[index_array[i]]);\n    } // 同率1位の場合はランダムに選択\n\n\n    if (index_array.length > 1) {\n      index = index_array[Math.floor(Math.random() * index_array.length)];\n    } else if (index_array.length = 1) {\n      index = index_array[0];\n    }\n\n    console.log(index);\n    console.log(\"該当症状: \" + symptom[index]);\n    workStyleResult.worstSymptom = symptom[index];\n  } else {\n    console.log(\"該当症状なし：健康\");\n    workStyleResult.worstSymptom = symptom[Math.floor(Math.random() * (symptom.length - 1))];\n    workStyleResult.isNiceWorkStyle = true;\n  } //console.log(workStyleResult);\n\n\n  return workStyleResult;\n}","map":{"version":3,"sources":["/Users/yuya/Workspace/React/test-app/src/components/getSymptom.ts"],"names":["getSymptom","personalInfo","day","thedaybeforeyesterday","symptom","severity","matrix","workStyleResult","flagArray","earlyFlag","lateFlag","longMeetingFlag","longDevFlag","irregularWorkingFlag","teleworkFlag","overtimeFlag","lackOfExerciseFlag","isNiceWorkStyle","symptoms","worstSymptom","startyesterdaystr","personalinfo","startTime","startyesterday","Date","starthour_yesterday","getHours","starttdbystr","starttdby","starthour_tdby","endyesterdaystr","endTime","endyesterday","endhour_yesterday","endtdbystr","endtdby","endhour_tdby","i","meetingHours","devHours","Math","abs","teleworkDaysCount","dailyWorkHours","exerciseHours","steps","console","log","total_severity","reduce","sum","element","sorted","slice","sort","a","b","ranks","map","x","indexOf","max","index_array","Array","index","push","shift","length","floor","random"],"mappings":"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","sourcesContent":["\r\nimport { Flag } from '@material-ui/icons';\r\nimport personalInfo from './personal_worktime_info_regular.json';\r\n// import personalInfo from './personal_worktime_info_DeputyChief.json';\r\n// import personalInfo from './personal_worktime_info_SeniorProfession.json';\r\n\r\nexport function getSymptom(personalInfo: any) {\r\n    // 曜日day（0:Mon, 1:Tue, 2:Wed, 3:Thu, 4:Fri）\r\n    const day = 4;\r\n    let thedaybeforeyesterday = day - 1;\r\n    if (thedaybeforeyesterday < 0) {\r\n        thedaybeforeyesterday = 4;\r\n    }\r\n\r\n    const symptom: string[] = [\"睡眠不足\", \"運動不足\", \"慢性的疲労\", \"眼精疲労\", \"集中力低下・頭痛\", \"腰痛・肩こり\", \"免疫低下\", \"過度なストレス状態\", \"該当なし\"];\r\n\r\n    const severity: number[] = [0, 0, 0, 0, 0, 0, 0, 0];\r\n    //パーソナル情報と症状の関連度\r\n    const matrix: number[][] = [\r\n        [1, 0, 0, 0, 0, 0, 0, 0],\r\n        [1, 0, 1, 1, 1, 0, 0, 0.5],\r\n        [0, 1, 1, 1, 1, 1, 0, 0],\r\n        [0, 1, 1, 1, 1, 1, 0, 0],\r\n        [1, 0, 1, 0, 1, 0, 0, 0.5],\r\n        [0, 1, 0, 0, 0.5, 0, 0, 0],\r\n        [1, 0, 1, 1, 1, 1, 1, 1],\r\n        [0, 1, 0, 0, 0, 1, 1, 0]\r\n    ]\r\n    // returnする\r\n    let workStyleResult = {\r\n        flagArray: {\r\n            earlyFlag: false,               // 朝早い\r\n            lateFlag: false,                // 終わるの遅い\r\n            longMeetingFlag: false,         // MTG多い\r\n            longDevFlag: false,             // dev多い\r\n            irregularWorkingFlag: false,    // 不規則\r\n            teleworkFlag: false,            // テレワーク\r\n            overtimeFlag: false,            // 長時間労働（残業しすぎ）\r\n            lackOfExerciseFlag: false       // 運動不足\r\n        },\r\n        isNiceWorkStyle: false,             // 健康かどうか\r\n        symptoms: [\"該当なし\"],\r\n        worstSymptom: \"該当なし\"\r\n    }\r\n\r\n    //前日の出勤時刻を取得\r\n    let startyesterdaystr = personalInfo.personalinfo[day].startTime;\r\n    let startyesterday = new Date(startyesterdaystr);\r\n    let starthour_yesterday = startyesterday.getHours();\r\n    //前々日tdby（the day before yesterday）の出勤時刻を取得\r\n    let starttdbystr = personalInfo.personalinfo[thedaybeforeyesterday].startTime;\r\n    let starttdby = new Date(starttdbystr);\r\n    let starthour_tdby = starttdby.getHours();\r\n\r\n    // 前日の退勤時刻を取得\r\n    let endyesterdaystr = personalInfo.personalinfo[day].endTime;\r\n    let endyesterday = new Date(endyesterdaystr);\r\n    let endhour_yesterday = endyesterday.getHours();\r\n    // 前々日の退勤時刻を取得\r\n    let endtdbystr = personalInfo.personalinfo[thedaybeforeyesterday].endTime;\r\n    let endtdby = new Date(endtdbystr);\r\n    let endhour_tdby = endtdby.getHours();\r\n\r\n    // 出勤時刻が8時以前\r\n    if (starthour_yesterday < 8) {\r\n        for (let i = 0; i < 8; i++) {\r\n            severity[i] += matrix[0][i];\r\n        }\r\n        workStyleResult.flagArray.earlyFlag = true;\r\n    }\r\n    // 退勤時刻が21時以降\r\n    if (endhour_yesterday >= 21 || endhour_yesterday < 5) {\r\n        for (let i = 0; i < 8; i++) {\r\n            severity[i] += matrix[1][i];\r\n        }\r\n        workStyleResult.flagArray.lateFlag = true;\r\n    }\r\n    // 会議参加時間が1日4時間以上\r\n    if (personalInfo.personalinfo[day].meetingHours >= 4) {\r\n        for (let i = 0; i < 8; i++) {\r\n            severity[i] += matrix[2][i];\r\n        }\r\n        workStyleResult.flagArray.longMeetingFlag = true;\r\n    }\r\n    // 開発時間が1日4時間以上\r\n    if (personalInfo.personalinfo[day].devHours >= 4) {\r\n        for (let i = 0; i < 8; i++) {\r\n            severity[i] += matrix[3][i];\r\n        }\r\n        workStyleResult.flagArray.longDevFlag = true;\r\n    }\r\n    //出勤時刻の差あるいは退勤時刻の差が2時間以上\r\n    if (Math.abs(starthour_yesterday - starthour_tdby) >= 2 || Math.abs(endhour_yesterday - endhour_tdby) >= 2) {\r\n        for (let i = 0; i < 8; i++) {\r\n            severity[i] += matrix[4][i];\r\n        }\r\n        workStyleResult.flagArray.irregularWorkingFlag = true;\r\n    }\r\n    // 在宅勤務が週3日以上\r\n    if (personalInfo.personalinfo[day].teleworkDaysCount >= 3) {\r\n        for (let i = 0; i < 8; i++) {\r\n            severity[i] += matrix[5][i];\r\n        }\r\n        workStyleResult.flagArray.teleworkFlag = true;\r\n    }\r\n    // 業務時間が週50時間以上\r\n    if (personalInfo.personalinfo[0].dailyWorkHours + personalInfo.personalinfo[1].dailyWorkHours\r\n        + personalInfo.personalinfo[2].dailyWorkHours + personalInfo.personalinfo[3].dailyWorkHours\r\n        + personalInfo.personalinfo[4].dailyWorkHours >= 50) {\r\n        for (let i = 0; i < 8; i++) {\r\n            severity[i] += matrix[6][i];\r\n        }\r\n        workStyleResult.flagArray.overtimeFlag = true;\r\n    }\r\n    // 運動時間が1日に0.5時間以下、あるいは歩数が1日に3000歩以下\r\n    if (personalInfo.personalinfo[day].exerciseHours <= 0.5\r\n        || personalInfo.personalinfo[day].steps < 3000) {\r\n        for (let i = 0; i < 8; i++) {\r\n            severity[i] += matrix[7][i];\r\n        }\r\n        workStyleResult.flagArray.lackOfExerciseFlag = true;\r\n    }\r\n\r\n    console.log(\"症状別重度: \" + severity);\r\n    //severity[i]の総和を計算\r\n    let total_severity = severity.reduce(function (sum, element) { return sum + element; }, 0);\r\n    console.log(\"症状重度合計: \" + total_severity);\r\n\r\n    // 1つ以上の症状に該当する場合の処理\r\n    if (total_severity > 0) {\r\n        //severity[i]を降順にランキング付け\r\n        let sorted = severity.slice().sort(function (a, b) { return b - a });\r\n        var ranks = severity.slice().map(function (x) { return sorted.indexOf(x) + 1 });\r\n        // console.log(ranks);\r\n\r\n        //severity[i]が最大値のときのインデックスiを取得\r\n        let max = Math.max(...severity);\r\n        var index_array = new Array();\r\n        var index = severity.indexOf(max);\r\n        while (index !== -1) {\r\n            index_array.push(index);\r\n            index = severity.indexOf(max, index + 1);\r\n        }\r\n        // console.log(index_array);\r\n\r\n        // severity[i]が1位(タイ)のsymptomを格納\r\n        workStyleResult.symptoms.shift();\r\n        for (let i = 0; i < index_array.length; i++) {\r\n            workStyleResult.symptoms.push(symptom[index_array[i]]);\r\n        }\r\n\r\n        // 同率1位の場合はランダムに選択\r\n        if (index_array.length > 1) {\r\n            index = index_array[Math.floor(Math.random() * index_array.length)];\r\n        } else if (index_array.length = 1) {\r\n            index = index_array[0];\r\n        }\r\n        console.log(index);\r\n        console.log(\"該当症状: \" + symptom[index]);\r\n        workStyleResult.worstSymptom = symptom[index];\r\n    } else {\r\n        console.log(\"該当症状なし：健康\");\r\n        workStyleResult.worstSymptom = symptom[Math.floor(Math.random() * (symptom.length - 1))]\r\n        workStyleResult.isNiceWorkStyle = true;\r\n    }\r\n\r\n    //console.log(workStyleResult);\r\n\r\n    return workStyleResult;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}