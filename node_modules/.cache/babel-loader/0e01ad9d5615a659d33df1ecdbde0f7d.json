{"ast":null,"code":"var _jsxFileName = \"/Users/yuya/Workspace/React/test-app/src/components/atoms/WorkTimePieChart.tsx\";\nimport React from \"react\"; // recharts\n\nimport { PieChart, Pie, Cell, ResponsiveContainer } from \"recharts\"; // 外部データとしてjsonファイルを定義\n// 最終的にはapiを叩く\n\nimport pwInfoRegular from \"../json/personal_worktime_info_regular.json\"; // jsonファイルの配列をchartに渡すための変数\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pwInfo = pwInfoRegular.personalinfo; // データを用意する。\n// const data = [\n//   { name: \"ゴルフ\", value: 400 },\n//   { name: \"サッカー\", value: 300 },\n//   { name: \"テニス\", value: 200 },\n//   { name: \"野球\", value: 100 }\n// ];\n// カラーを用意する。\n\nconst COLORS = [\"#FF8042\", \"#FFBB28\", \"#00C49F\", \"#0088FE\", \"#191970\"]; // ラベルの位置や内容をカスタマイズ\n\nconst renderLabel = ({\n  name\n}) => {\n  return name;\n};\n\nlet workSumData = [{\n  name: \"会議\",\n  value: 999\n}, {\n  name: \"開発（コーディング）\",\n  value: 999\n}, {\n  name: \"事務作業\",\n  value: 999\n}, {\n  name: \"セミナー\",\n  value: 999\n}, {\n  name: \"研修\",\n  value: 999\n}]; //グローバル変数を定義\n// define(workPattern, 5); //勤務内容パターン数\n\nlet sumWorkTime = ({\n  pwInfo\n}) => {\n  let data = new Array(workPattern); //勤務内容パターン数に合わせる\n\n  for (let index = 0; index < pwInfo.length; index++) {\n    const element = pwInfo[index];\n    data[0] += element.meetingHours;\n    data[1] += element.devHours;\n    data[2] += element.clericalWorkHours;\n    data[3] += element.seminarHours;\n    data[4] += element.trainingHours;\n  }\n\n  for (let index = 0; index < workPattern; index++) {\n    workSumData[index].value = data[index];\n  }\n\n  console.log(workSumData);\n  return workSumData;\n};\n\nconst WorkTimePieChart = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u3042\\u306A\\u305F\\u306E\\u52E4\\u52D9\\u6642\\u9593\\u5272\\u5408\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 400,\n      children: /*#__PURE__*/_jsxDEV(PieChart, {\n        width: 500,\n        height: 400,\n        children: /*#__PURE__*/_jsxDEV(Pie, {\n          data: workSumData,\n          cx: \"50%\",\n          cy: \"50%\",\n          labelLine: true,\n          outerRadius: 150,\n          fill: \"#8884d8\",\n          nameKey: \"name\",\n          dataKey: \"value\",\n          label: renderLabel,\n          children: workSumData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n            fill: COLORS[index % COLORS.length]\n          }, `cell-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_c = WorkTimePieChart;\nexport default WorkTimePieChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkTimePieChart\");","map":{"version":3,"sources":["/Users/yuya/Workspace/React/test-app/src/components/atoms/WorkTimePieChart.tsx"],"names":["React","PieChart","Pie","Cell","ResponsiveContainer","pwInfoRegular","pwInfo","personalinfo","COLORS","renderLabel","name","workSumData","value","sumWorkTime","data","Array","workPattern","index","length","element","meetingHours","devHours","clericalWorkHours","seminarHours","trainingHours","console","log","WorkTimePieChart","display","justifyContent","alignItems","map","entry"],"mappings":"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","sourcesContent":["import React from \"react\";\n// recharts\nimport { PieChart, Pie, Sector, Cell, ResponsiveContainer } from \"recharts\";\n// 外部データとしてjsonファイルを定義\n// 最終的にはapiを叩く\nimport pwInfoRegular from \"../json/personal_worktime_info_regular.json\";\n// jsonファイルの配列をchartに渡すための変数\nconst pwInfo = pwInfoRegular.personalinfo;\n\n// データを用意する。\n// const data = [\n//   { name: \"ゴルフ\", value: 400 },\n//   { name: \"サッカー\", value: 300 },\n//   { name: \"テニス\", value: 200 },\n//   { name: \"野球\", value: 100 }\n// ];\n\n// カラーを用意する。\nconst COLORS = [\"#FF8042\", \"#FFBB28\", \"#00C49F\", \"#0088FE\", \"#191970\"];\n// ラベルの位置や内容をカスタマイズ\nconst renderLabel = ({ name }: any) => {\n  return name;\n};\n\nlet workSumData = [\n  { name: \"会議\", value: 999 },\n  { name: \"開発（コーディング）\", value: 999 },\n  { name: \"事務作業\", value: 999 },\n  { name: \"セミナー\", value: 999 },\n  { name: \"研修\", value: 999 }\n]\n\n//グローバル変数を定義\n// define(workPattern, 5); //勤務内容パターン数\ndeclare const workPattern: 5;\n\nlet sumWorkTime = ({pwInfo}: any) => {\n  let data: any[] = new Array(workPattern); //勤務内容パターン数に合わせる\n\n  for (let index = 0; index < pwInfo.length; index++) {\n    const element = pwInfo[index];\n    data[0] += element.meetingHours;\n    data[1] += element.devHours;\n    data[2] += element.clericalWorkHours;\n    data[3] += element.seminarHours;\n    data[4] += element.trainingHours;\n  }\n\n  for (let index = 0; index < workPattern; index++) {\n    workSumData[index].value = data[index];\n  }\n\n  console.log(workSumData);\n\n  return workSumData;\n};\n\nconst WorkTimePieChart = (): JSX.Element => {\n\n  return (\n    <div>\n      <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      }}\n      >\n      <h2>あなたの勤務時間割合</h2>\n      </div>\n      <ResponsiveContainer width=\"100%\" height={400}>\n        <PieChart width={500} height={400}>\n          <Pie\n            data={workSumData}\n            cx=\"50%\"\n            cy=\"50%\"\n            labelLine={true}\n            outerRadius={150}\n            fill=\"#8884d8\"\n            nameKey=\"name\"\n            dataKey=\"value\"\n            label={renderLabel}\n          >\n            {workSumData.map((entry, index) => (\n              <Cell\n                key={`cell-${index}`}\n                fill={COLORS[index % COLORS.length]}\n              />\n            ))}\n          </Pie>\n        </PieChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\nexport default WorkTimePieChart;\n"]},"metadata":{},"sourceType":"module"}