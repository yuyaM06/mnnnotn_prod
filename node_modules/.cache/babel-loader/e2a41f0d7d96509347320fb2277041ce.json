{"ast":null,"code":"var _jsxFileName = \"/Users/yuya/Workspace/React/test-app/src/components/MyForm.tsx\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { Form, FormGroup, Col, FormLabel, Button, ButtonToolbar } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyForm = props => {\n  const {\n    handleSubmit,\n    pristine,\n    reset,\n    submitting\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n      controlId: 'name',\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        as: FormLabel,\n        sm: 2,\n        children: \"\\u30E6\\u30FC\\u30B6\\u30FC\\u540D\\u3082\\u3057\\u304F\\u306FID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: 5,\n        children: /*#__PURE__*/_jsxDEV(Field, {\n          id: 'name',\n          name: \"name\",\n          component: \"input\",\n          type: \"text\",\n          placeholder: \"Name\",\n          className: 'form-control'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      controlId: 'password',\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        as: FormLabel,\n        sm: 2,\n        children: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: 5,\n        children: /*#__PURE__*/_jsxDEV(Field, {\n          id: 'password',\n          name: \"password\",\n          component: \"input\",\n          type: \"text\",\n          placeholder: \"Password\",\n          className: 'form-control'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        sm: 5,\n        children: /*#__PURE__*/_jsxDEV(ButtonToolbar, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: 'primary',\n            type: \"submit\",\n            disabled: pristine || submitting,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            disabled: pristine || submitting,\n            onClick: reset,\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MyForm;\nexport default reduxForm({\n  form: 'myForm',\n  destroyOnUnmount: false,\n  forceUnregisterOnUnmount: true,\n  // validate: myValidation,\n  initialValues: {\n    name: 'デフォルト表示'\n  },\n  // asyncValidate,\n  asyncBlurFields: ['phone']\n})(MyForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"MyForm\");","map":{"version":3,"sources":["/Users/yuya/Workspace/React/test-app/src/components/MyForm.tsx"],"names":["React","Field","reduxForm","Form","FormGroup","Col","FormLabel","Button","ButtonToolbar","MyForm","props","handleSubmit","pristine","reset","submitting","form","destroyOnUnmount","forceUnregisterOnUnmount","initialValues","name","asyncBlurFields"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,GAA1B,EAA+BC,SAA/B,EAA0CC,MAA1C,EAAkDC,aAAlD,QAAuE,iBAAvE;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAgB;AAC7B,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,QAAhB;AAA0BC,IAAAA,KAA1B;AAAiCC,IAAAA;AAAjC,MAAgDJ,KAAtD;AACA,sBACE,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEC,YAAhB;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAE,MAAtB;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAEL,SAAT;AAAoB,QAAA,EAAE,EAAE,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA,+BACE,QAAC,KAAD;AACE,UAAA,EAAE,EAAE,MADN;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,SAAS,EAAC,OAHZ;AAIE,UAAA,IAAI,EAAC,MAJP;AAKE,UAAA,WAAW,EAAC,MALd;AAME,UAAA,SAAS,EAAE;AANb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAcE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAE,UAAtB;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAEA,SAAT;AAAoB,QAAA,EAAE,EAAE,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA,+BACE,QAAC,KAAD;AACE,UAAA,EAAE,EAAE,UADN;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,SAAS,EAAC,OAHZ;AAIE,UAAA,IAAI,EAAC,MAJP;AAKE,UAAA,WAAW,EAAC,UALd;AAME,UAAA,SAAS,EAAE;AANb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF,eA2BE,QAAC,SAAD;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA,+BACE,QAAC,aAAD;AAAA,kCACE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAE,SAAjB;AAA4B,YAAA,IAAI,EAAC,QAAjC;AAA0C,YAAA,QAAQ,EAAEM,QAAQ,IAAIE,UAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,QAAQ,EAAEF,QAAQ,IAAIE,UAA5C;AAAwD,YAAA,OAAO,EAAED,KAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA3BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD,CAxCD;;KAAMJ,M;AA0CN,eAAeP,SAAS,CAAC;AACvBa,EAAAA,IAAI,EAAE,QADiB;AAEvBC,EAAAA,gBAAgB,EAAE,KAFK;AAGvBC,EAAAA,wBAAwB,EAAE,IAHH;AAIvB;AACAC,EAAAA,aAAa,EAAE;AAAEC,IAAAA,IAAI,EAAE;AAAR,GALQ;AAMvB;AACAC,EAAAA,eAAe,EAAE,CAAC,OAAD;AAPM,CAAD,CAAT,CAQZX,MARY,CAAf","sourcesContent":["import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { Form, FormGroup, Col, FormLabel, Button, ButtonToolbar } from 'react-bootstrap';\n\nconst MyForm = (props: any) => {\n  const { handleSubmit, pristine, reset, submitting } = props;\n  return (\n    <Form onSubmit={handleSubmit}>\n      <FormGroup controlId={'name'}>\n        <Col as={FormLabel} sm={2}>ユーザー名もしくはID</Col>\n        <Col sm={5}>\n          <Field\n            id={'name'}\n            name=\"name\"\n            component=\"input\"\n            type=\"text\"\n            placeholder=\"Name\"\n            className={'form-control'}\n          />\n        </Col>\n      </FormGroup>\n      <FormGroup controlId={'password'}>\n        <Col as={FormLabel} sm={2}>パスワード</Col>\n        <Col sm={5}>\n          <Field\n            id={'password'}\n            name=\"password\"\n            component=\"input\"\n            type=\"text\"\n            placeholder=\"Password\"\n            className={'form-control'}\n          />\n        </Col>\n      </FormGroup>\n      <FormGroup>\n        <Col sm={5}>\n          <ButtonToolbar>\n            <Button variant={'primary'} type=\"submit\" disabled={pristine || submitting}>Login</Button>\n            <Button type=\"button\" disabled={pristine || submitting} onClick={reset}>Clear</Button>\n          </ButtonToolbar>\n        </Col>\n      </FormGroup>\n    </Form>\n  );\n};\n\nexport default reduxForm({\n  form: 'myForm',\n  destroyOnUnmount: false,\n  forceUnregisterOnUnmount: true,\n  // validate: myValidation,\n  initialValues: { name: 'デフォルト表示' },\n  // asyncValidate,\n  asyncBlurFields: ['phone'],\n})(MyForm);\n"]},"metadata":{},"sourceType":"module"}