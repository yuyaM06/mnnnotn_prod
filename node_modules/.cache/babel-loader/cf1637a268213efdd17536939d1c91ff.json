{"ast":null,"code":"import axios from 'axios';\nimport { GET_CAT_REQUEST, GET_CAT_SUCCESS, GET_CAT_FAILURE } from './action';\n\nconst getCatRequest = () => {\n  return {\n    type: GET_CAT_REQUEST,\n    payload: null\n  };\n};\n\nconst getCatSuccess = json => {\n  return {\n    type: GET_CAT_SUCCESS,\n    payload: json\n  };\n};\n\nconst getCatFailure = error => {\n  return {\n    type: GET_CAT_FAILURE,\n    payload: error\n  };\n};\n\nconst getCatAction = () => {\n  return dispatch => {\n    dispatch(getCatRequest());\n    return axios.get(`https://api.thecatapi.com/v1/images/search`).then(res => dispatch(getCatSuccess(JSON.parse(res.data)))).catch(err => dispatch(getCatFailure(err)));\n  };\n};\n\nexport default getCatAction;","map":{"version":3,"sources":["/Users/yuya/Workspace/React/test-app/src/cat/getCatAction.ts"],"names":["axios","GET_CAT_REQUEST","GET_CAT_SUCCESS","GET_CAT_FAILURE","getCatRequest","type","payload","getCatSuccess","json","getCatFailure","error","getCatAction","dispatch","get","then","res","JSON","parse","data","catch","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAgBC,eAAhB,EAAiCC,eAAjC,EAAkDC,eAAlD,QAAwE,UAAxE;;AAEA,MAAMC,aAAa,GAAG,MAAc;AAClC,SAAO;AACLC,IAAAA,IAAI,EAAEJ,eADD;AAELK,IAAAA,OAAO,EAAE;AAFJ,GAAP;AAID,CALD;;AAOA,MAAMC,aAAa,GAAIC,IAAD,IAA0B;AAC9C,SAAO;AACLH,IAAAA,IAAI,EAAEH,eADD;AAELI,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALD;;AAOA,MAAMC,aAAa,GAAIC,KAAD,IAA2B;AAC/C,SAAM;AACJL,IAAAA,IAAI,EAAEF,eADF;AAEJG,IAAAA,OAAO,EAAEI;AAFL,GAAN;AAID,CALD;;AAOA,MAAMC,YAAY,GAAG,MAAM;AACzB,SAAQC,QAAD,IAAmB;AACxBA,IAAAA,QAAQ,CAACR,aAAa,EAAd,CAAR;AACA,WAAOJ,KAAK,CAACa,GAAN,CAAW,4CAAX,EACJC,IADI,CACCC,GAAG,IACPH,QAAQ,CAACL,aAAa,CAACS,IAAI,CAACC,KAAL,CAAWF,GAAG,CAACG,IAAf,CAAD,CAAd,CAFL,EAGHC,KAHG,CAGGC,GAAG,IACTR,QAAQ,CAACH,aAAa,CAACW,GAAD,CAAd,CAJL,CAAP;AAMD,GARD;AASD,CAVD;;AAYA,eAAeT,YAAf","sourcesContent":["import axios from 'axios';\nimport {Action, GET_CAT_REQUEST, GET_CAT_SUCCESS, GET_CAT_FAILURE} from './action';\n\nconst getCatRequest = (): Action => {\n  return {\n    type: GET_CAT_REQUEST,\n    payload: null\n  }\n}\n\nconst getCatSuccess = (json: Object): Action => {\n  return {\n    type: GET_CAT_SUCCESS,\n    payload: json\n  }\n}\n\nconst getCatFailure = (error: Object): Action => {\n  return{\n    type: GET_CAT_FAILURE,\n    payload: error\n  }\n}\n\nconst getCatAction = () => {\n  return (dispatch: any) => {\n    dispatch(getCatRequest())\n    return axios.get(`https://api.thecatapi.com/v1/images/search`)\n      .then(res =>\n        dispatch(getCatSuccess(JSON.parse(res.data)))\n      ).catch(err =>\n        dispatch(getCatFailure(err))\n      )\n  }\n}\n\nexport default getCatAction;\n"]},"metadata":{},"sourceType":"module"}