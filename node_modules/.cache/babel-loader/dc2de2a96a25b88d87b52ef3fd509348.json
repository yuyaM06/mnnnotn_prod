{"ast":null,"code":"var _jsxFileName = \"/Users/yuya/Workspace/React/test-app/src/components/atoms/WorkTimeBarChart.tsx\";\nimport React from \"react\"; // material-ui\n\n// recharts\nimport { PieChart, Pie, Cell } from \"recharts\"; // データを用意する。\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  name: \"ゴルフ\",\n  value: 400\n}, {\n  name: \"サッカー\",\n  value: 300\n}, {\n  name: \"テニス\",\n  value: 200\n}, {\n  name: \"野球\",\n  value: 100\n}]; // カラーを用意する。\n\nconst COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"]; // ラベルの位置や内容をカスタマイズ\n\nconst renderLabel = ({\n  name\n}) => {\n  return name;\n};\n\nconst WorkTimeBarChart = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(PieChart, {\n      width: 400,\n      height: 400,\n      children: /*#__PURE__*/_jsxDEV(Pie, {\n        data: data,\n        cx: \"50%\",\n        cy: \"50%\",\n        labelLine: true,\n        outerRadius: 80,\n        fill: \"#8884d8\",\n        nameKey: \"name\",\n        dataKey: \"value\",\n        label: renderLabel,\n        children: data.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n          fill: COLORS[index % COLORS.length]\n        }, `cell-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_c = WorkTimeBarChart;\nexport default WorkTimeBarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkTimeBarChart\");","map":{"version":3,"sources":["/Users/yuya/Workspace/React/test-app/src/components/atoms/WorkTimeBarChart.tsx"],"names":["React","PieChart","Pie","Cell","data","name","value","COLORS","renderLabel","WorkTimeBarChart","map","entry","index","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAEA;AACA,SAASC,QAAT,EAAmBC,GAAnB,EAAgCC,IAAhC,QAAiE,UAAjE,C,CACA;;;AACA,MAAMC,IAAI,GAAG,CACX;AAAEC,EAAAA,IAAI,EAAE,KAAR;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CADW,EAEX;AAAED,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CAFW,EAGX;AAAED,EAAAA,IAAI,EAAE,KAAR;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CAHW,EAIX;AAAED,EAAAA,IAAI,EAAE,IAAR;AAAcC,EAAAA,KAAK,EAAE;AAArB,CAJW,CAAb,C,CAMA;;AACA,MAAMC,MAAM,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,CAAf,C,CACA;;AACA,MAAMC,WAAW,GAAG,CAAC;AAAEH,EAAAA;AAAF,CAAD,KAAmB;AACrC,SAAOA,IAAP;AACD,CAFD;;AAIA,MAAMI,gBAAgB,GAAG,MAAmB;AAC1C,sBACE;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAE,GAAjB;AAAsB,MAAA,MAAM,EAAE,GAA9B;AAAA,6BACE,QAAC,GAAD;AACE,QAAA,IAAI,EAAEL,IADR;AAEE,QAAA,EAAE,EAAC,KAFL;AAGE,QAAA,EAAE,EAAC,KAHL;AAIE,QAAA,SAAS,EAAE,IAJb;AAKE,QAAA,WAAW,EAAE,EALf;AAME,QAAA,IAAI,EAAC,SANP;AAOE,QAAA,OAAO,EAAC,MAPV;AAQE,QAAA,OAAO,EAAC,OARV;AASE,QAAA,KAAK,EAAEI,WATT;AAAA,kBAWGJ,IAAI,CAACM,GAAL,CAAS,CAACC,KAAD,EAAQC,KAAR,kBACR,QAAC,IAAD;AAEE,UAAA,IAAI,EAAEL,MAAM,CAACK,KAAK,GAAGL,MAAM,CAACM,MAAhB;AAFd,WACQ,QAAOD,KAAM,EADrB;AAAA;AAAA;AAAA;AAAA,gBADD;AAXH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CAzBD;;KAAMH,gB;AA0BN,eAAeA,gBAAf","sourcesContent":["import React from \"react\";\n// material-ui\nimport { Card, CardHeader, CardContent, Typography } from \"@material-ui/core\";\n// recharts\nimport { PieChart, Pie, Sector, Cell, ResponsiveContainer } from \"recharts\";\n// データを用意する。\nconst data = [\n  { name: \"ゴルフ\", value: 400 },\n  { name: \"サッカー\", value: 300 },\n  { name: \"テニス\", value: 200 },\n  { name: \"野球\", value: 100 },\n];\n// カラーを用意する。\nconst COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"];\n// ラベルの位置や内容をカスタマイズ\nconst renderLabel = ({ name }: any) => {\n  return name;\n};\n\nconst WorkTimeBarChart = (): JSX.Element => {\n  return (\n    <div>\n      <PieChart width={400} height={400}>\n        <Pie\n          data={data}\n          cx=\"50%\"\n          cy=\"50%\"\n          labelLine={true}\n          outerRadius={80}\n          fill=\"#8884d8\"\n          nameKey=\"name\"\n          dataKey=\"value\"\n          label={renderLabel}\n        >\n          {data.map((entry, index) => (\n            <Cell\n              key={`cell-${index}`}\n              fill={COLORS[index % COLORS.length]}\n            />\n          ))}\n        </Pie>\n      </PieChart>\n    </div>\n  );\n};\nexport default WorkTimeBarChart;\n"]},"metadata":{},"sourceType":"module"}