{"ast":null,"code":"import { POST_PRODUCT_REQUEST, POST_PRODUCT_SUCCESS, POST_PRODUCT_FAILURE } from './action';\nconst initalState = {};\n\nconst postProductReducer = (state = initalState, action) => {\n  switch (action.type) {\n    case POST_PRODUCT_REQUEST:\n      return {\n        status: \"Fetching\",\n        prodID: 0,\n        prodName: \"\",\n        description: \"\",\n        price: 0,\n        figURL: \"\",\n        date: \"\",\n        calory: 0,\n        protein: 0,\n        lipid: 0,\n        carbonhydrates: 0,\n        sugar: 0,\n        fiber: 0,\n        scequiv: 0,\n        region: [],\n        allergy: [],\n        lastUpdated: Date.now()\n      };\n\n    case POST_PRODUCT_SUCCESS:\n      return {\n        status: \"Success\",\n        prodID: action.payload[0].prodID,\n        prodName: action.payload[0].prodName,\n        description: action.payload[0].description,\n        price: action.payload[0].price,\n        figURL: action.payload[0].figURL,\n        date: action.payload[0].date,\n        calory: action.payload[0].calory,\n        protein: action.payload[0].protein,\n        lipid: action.payload[0].lipid,\n        carbonhydrates: action.payload[0].carbonhydrates,\n        sugar: action.payload[0].suger,\n        fiber: action.payload[0].fiber,\n        scequiv: action.payload[0].scequiv,\n        region: action.payload[0].region,\n        allergy: action.payload[0].allergy,\n        lastUpdated: Date.now()\n      };\n\n    case POST_PRODUCT_FAILURE:\n      return {\n        status: \"Failure\",\n        prodID: 0,\n        prodName: \"\",\n        description: \"\",\n        price: 0,\n        figURL: \"\",\n        date: \"\",\n        calory: 0,\n        protein: 0,\n        lipid: 0,\n        carbonhydrates: 0,\n        sugar: 0,\n        fiber: 0,\n        scequiv: 0,\n        region: [],\n        allergy: [],\n        lastUpdated: Date.now()\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default postProductReducer;","map":{"version":3,"sources":["/Users/yuya/Workspace/React/test-app/src/components/postProductReducer.ts"],"names":["POST_PRODUCT_REQUEST","POST_PRODUCT_SUCCESS","POST_PRODUCT_FAILURE","initalState","postProductReducer","state","action","type","status","prodID","prodName","description","price","figURL","date","calory","protein","lipid","carbonhydrates","sugar","fiber","scequiv","region","allergy","lastUpdated","Date","now","payload","suger"],"mappings":"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","sourcesContent":["import { ProductState } from './store';\nimport { Action, POST_PRODUCT_REQUEST, POST_PRODUCT_SUCCESS, POST_PRODUCT_FAILURE } from './action';\n\nconst initalState: ProductState = {\n\n}\n\nconst postProductReducer = (state: ProductState = initalState, action: Action): ProductState => {\n  switch (action.type) {\n    case POST_PRODUCT_REQUEST:\n      return ({\n        status: \"Fetching\",\n        prodID: 0,\n        prodName: \"\",\n        description: \"\",\n        price: 0,\n        figURL: \"\",\n        date: \"\",\n        calory: 0,\n        protein: 0,\n        lipid: 0,\n        carbonhydrates: 0,\n        sugar: 0,\n        fiber: 0,\n        scequiv: 0,\n        region: [],\n        allergy: [],\n        lastUpdated: Date.now()\n      })\n    case POST_PRODUCT_SUCCESS:\n      return ({\n        status: \"Success\",\n        prodID: action.payload[0].prodID,\n        prodName: action.payload[0].prodName,\n        description: action.payload[0].description,\n        price: action.payload[0].price,\n        figURL: action.payload[0].figURL,\n        date: action.payload[0].date,\n        calory: action.payload[0].calory,\n        protein: action.payload[0].protein,\n        lipid: action.payload[0].lipid,\n        carbonhydrates: action.payload[0].carbonhydrates,\n        sugar: action.payload[0].suger,\n        fiber: action.payload[0].fiber,\n        scequiv: action.payload[0].scequiv,\n        region: action.payload[0].region,\n        allergy: action.payload[0].allergy,\n        lastUpdated: Date.now()\n      })\n    case POST_PRODUCT_FAILURE:\n      return ({\n        status: \"Failure\",\n        prodID: 0,\n        prodName: \"\",\n        description: \"\",\n        price: 0,\n        figURL: \"\",\n        date: \"\",\n        calory: 0,\n        protein: 0,\n        lipid: 0,\n        carbonhydrates: 0,\n        sugar: 0,\n        fiber: 0,\n        scequiv: 0,\n        region: [],\n        allergy: [],\n        lastUpdated: Date.now()\n      })\n    default:\n      return state\n  }\n}\n\nexport default postProductReducer;\n"]},"metadata":{},"sourceType":"module"}